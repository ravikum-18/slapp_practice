trigger:
- master  # Triggers pipeline on push to master branch

pool:
  name: 'mypool'  # Change to your self-hosted pool if needed

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

stages:
# =========================
# ðŸ”¨ STAGE 1: BUILD
# =========================
- stage: Build
  displayName: 'Build Stage'
  jobs:
  - job: BuildJob
    displayName: 'Building the Project'
    steps:
    - task: NuGetToolInstaller@1

    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'

    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: VSTest@2
      inputs:
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

# =========================
# ðŸš€ STAGE 2: RELEASE
# =========================
- stage: Release
  displayName: 'Release Stage'
  dependsOn: Build  # Ensures Release waits for Build to finish
  jobs:
  - job: ReleaseJob
    displayName: 'Releasing the Build'
    steps:
    - download: current
      artifact: drop

    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          Write-Host "Deploying the build artifact..."
          Write-Host "Artifact Path: $(Pipeline.Workspace)/drop"

    # Example of a deployment step
    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'myapp1'
        appType: 'webApp'
        WebAppName: 'demoapp78u'
        package: '$(Pipeline.Workspace)/drop/*.zip'
